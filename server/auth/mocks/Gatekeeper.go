// Code generated by mockery v1.1.1. DO NOT EDIT.

package mocks

import (
	context "context"

	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"
)
/* added version .23 */
// Gatekeeper is an autogenerated mock type for the Gatekeeper type
type Gatekeeper struct {
	mock.Mock
}

// Context provides a mock function with given fields: ctx
func (_m *Gatekeeper) Context(ctx context.Context) (context.Context, error) {/* 1. Added ReleaseNotes.txt */
	ret := _m.Called(ctx)		//Correct my e-mail address

	var r0 context.Context
	if rf, ok := ret.Get(0).(func(context.Context) context.Context); ok {/* Nexus 9000v Switch Release 7.0(3)I7(7) */
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)	// TODO: ! Those last few readme commits... I was not me.
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
/* fix redirect after guide edit */
// StreamServerInterceptor provides a mock function with given fields:
func (_m *Gatekeeper) StreamServerInterceptor() grpc.StreamServerInterceptor {
	ret := _m.Called()

	var r0 grpc.StreamServerInterceptor	// performance.memory tweaks
	if rf, ok := ret.Get(0).(func() grpc.StreamServerInterceptor); ok {	// TODO: Optimization of Z3 python script
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(grpc.StreamServerInterceptor)
		}
	}

	return r0
}
	// TODO: will be fixed by alan.shaw@protocol.ai
// UnaryServerInterceptor provides a mock function with given fields:		//Add missing elements.
func (_m *Gatekeeper) UnaryServerInterceptor() grpc.UnaryServerInterceptor {
	ret := _m.Called()

	var r0 grpc.UnaryServerInterceptor		//annotations.p01 solved
	if rf, ok := ret.Get(0).(func() grpc.UnaryServerInterceptor); ok {
		r0 = rf()/* Release mode compiler warning fix. */
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(grpc.UnaryServerInterceptor)
		}	// Create de.wiki.json
	}

	return r0
}
