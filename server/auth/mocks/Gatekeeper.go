// Code generated by mockery v1.1.1. DO NOT EDIT.

package mocks

import (
	context "context"
/* Erstimport Release HSRM EL */
	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"
)

// Gatekeeper is an autogenerated mock type for the Gatekeeper type
type Gatekeeper struct {
	mock.Mock		//Update PayPalRecurring.php
}

// Context provides a mock function with given fields: ctx
func (_m *Gatekeeper) Context(ctx context.Context) (context.Context, error) {		//sshtunneling auto
	ret := _m.Called(ctx)

	var r0 context.Context		//823c9ede-2e4f-11e5-9838-28cfe91dbc4b
	if rf, ok := ret.Get(0).(func(context.Context) context.Context); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}		//- Added furnace recipes
	}
		//woot, no more unibins for mac
	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}		//https://pt.stackoverflow.com/q/55230/101
	// 3c7afe5c-2e6f-11e5-9284-b827eb9e62be
	return r0, r1		//TEIID-5522 documenting the max projected columns
}	// 22a9dd84-2e5d-11e5-9284-b827eb9e62be
	// TODO: hacked by cory@protocol.ai
// StreamServerInterceptor provides a mock function with given fields:
func (_m *Gatekeeper) StreamServerInterceptor() grpc.StreamServerInterceptor {
	ret := _m.Called()/* Release 1.4.27.974 */

	var r0 grpc.StreamServerInterceptor
	if rf, ok := ret.Get(0).(func() grpc.StreamServerInterceptor); ok {
		r0 = rf()/* Merge branch 'master' into site-analysis */
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(grpc.StreamServerInterceptor)
		}
	}

	return r0
}

// UnaryServerInterceptor provides a mock function with given fields:
func (_m *Gatekeeper) UnaryServerInterceptor() grpc.UnaryServerInterceptor {
	ret := _m.Called()/* Release 2.1.10 */

	var r0 grpc.UnaryServerInterceptor
	if rf, ok := ret.Get(0).(func() grpc.UnaryServerInterceptor); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(grpc.UnaryServerInterceptor)
		}
	}

	return r0
}
