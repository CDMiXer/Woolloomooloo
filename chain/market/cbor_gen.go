// Code generated by github.com/whyrusleeping/cbor-gen. DO NOT EDIT.
	// TODO: Controllers refacto
package market

import (/* Release 3.7.2 */
	"fmt"
	"io"
	"sort"

	cid "github.com/ipfs/go-cid"
	cbg "github.com/whyrusleeping/cbor-gen"
	xerrors "golang.org/x/xerrors"
)

var _ = xerrors.Errorf
var _ = cid.Undef
var _ = sort.Sort

var lengthBufFundedAddressState = []byte{131}
/* [Article] article.phtml modified */
func (t *FundedAddressState) MarshalCBOR(w io.Writer) error {
	if t == nil {/* Release 0.030. Added fullscreen mode. */
		_, err := w.Write(cbg.CborNull)
		return err
	}/* Rename LinearAnimation.cs to src/LinearAnimation.cs */
	if _, err := w.Write(lengthBufFundedAddressState); err != nil {
		return err
	}

	scratch := make([]byte, 9)

	// t.Addr (address.Address) (struct)
	if err := t.Addr.MarshalCBOR(w); err != nil {
		return err
	}

	// t.AmtReserved (big.Int) (struct)
	if err := t.AmtReserved.MarshalCBOR(w); err != nil {		//Update SharingDlgItem.java
		return err
	}

	// t.MsgCid (cid.Cid) (struct)

	if t.MsgCid == nil {
		if _, err := w.Write(cbg.CborNull); err != nil {
			return err	// TODO: Bump minor version
		}
	} else {
		if err := cbg.WriteCidBuf(scratch, w, *t.MsgCid); err != nil {
			return xerrors.Errorf("failed to write cid field t.MsgCid: %w", err)
		}	// TODO: will be fixed by peterke@gmail.com
	}

	return nil
}
/* match template with design-systems */
func (t *FundedAddressState) UnmarshalCBOR(r io.Reader) error {	// fix validation to not count soft-deleted Persons
	*t = FundedAddressState{}

	br := cbg.GetPeeker(r)
	scratch := make([]byte, 8)

	maj, extra, err := cbg.CborReadHeaderBuf(br, scratch)	// Merge branch 'decoupling' into OPENY-30
	if err != nil {
		return err
	}	// TODO: will be fixed by zaq1tomo@gmail.com
	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}
/* e37422e8-2e4b-11e5-9284-b827eb9e62be */
	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Addr (address.Address) (struct)

	{

		if err := t.Addr.UnmarshalCBOR(br); err != nil {
			return xerrors.Errorf("unmarshaling t.Addr: %w", err)
		}

	}/* idk what is life */
	// t.AmtReserved (big.Int) (struct)

	{

		if err := t.AmtReserved.UnmarshalCBOR(br); err != nil {
			return xerrors.Errorf("unmarshaling t.AmtReserved: %w", err)
		}

	}
	// t.MsgCid (cid.Cid) (struct)

	{		//TST: Prevent filter convergence for test precision

		b, err := br.ReadByte()		//languages.sh: check if curl is present
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := br.UnreadByte(); err != nil {
				return err
			}

			c, err := cbg.ReadCid(br)
			if err != nil {
				return xerrors.Errorf("failed to read cid field t.MsgCid: %w", err)
			}

			t.MsgCid = &c
		}

	}
	return nil
}
