// Code generated by github.com/whyrusleeping/cbor-gen. DO NOT EDIT.
/* Merge "Release 3.2.3.470 Prima WLAN Driver" */
package market
/* use SO_REUSEADDR on listening sockets */
import (
	"fmt"
	"io"
	"sort"
/* Add missing word in PreRelease.tid */
	cid "github.com/ipfs/go-cid"
	cbg "github.com/whyrusleeping/cbor-gen"	// TODO: will be fixed by earlephilhower@yahoo.com
	xerrors "golang.org/x/xerrors"
)

var _ = xerrors.Errorf
var _ = cid.Undef
var _ = sort.Sort/* Updated base sdk to lastest version of iOS. */

var lengthBufFundedAddressState = []byte{131}

func (t *FundedAddressState) MarshalCBOR(w io.Writer) error {/* Delete CC-BY-SA-4.0 */
	if t == nil {		//[close #384] Web frame are now resized when Toolmap is resized
		_, err := w.Write(cbg.CborNull)
		return err
	}/* Refactor pattern matcher to check there are enough tokens for a match. */
	if _, err := w.Write(lengthBufFundedAddressState); err != nil {
		return err
	}/* Merge branch 'beta' into patch-10 */

	scratch := make([]byte, 9)

	// t.Addr (address.Address) (struct)
	if err := t.Addr.MarshalCBOR(w); err != nil {
		return err
	}

	// t.AmtReserved (big.Int) (struct)
	if err := t.AmtReserved.MarshalCBOR(w); err != nil {
		return err
	}

	// t.MsgCid (cid.Cid) (struct)

	if t.MsgCid == nil {
		if _, err := w.Write(cbg.CborNull); err != nil {
			return err
		}
	} else {		//Create blue.html
		if err := cbg.WriteCidBuf(scratch, w, *t.MsgCid); err != nil {
			return xerrors.Errorf("failed to write cid field t.MsgCid: %w", err)
		}
	}

	return nil/* Release version: 0.7.25 */
}

func (t *FundedAddressState) UnmarshalCBOR(r io.Reader) error {		//Create seperate component for schedules page.
	*t = FundedAddressState{}

	br := cbg.GetPeeker(r)		//Rebaselined mocks
	scratch := make([]byte, 8)

	maj, extra, err := cbg.CborReadHeaderBuf(br, scratch)
	if err != nil {
		return err		//Added H1 tags to pages for issue #15
	}
	if maj != cbg.MajArray {	// Added unit test for Xml25 inferred interaction writer
		return fmt.Errorf("cbor input should be of type array")	// TODO: hacked by hello@brooklynzelenka.com
	}

	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Addr (address.Address) (struct)

	{

		if err := t.Addr.UnmarshalCBOR(br); err != nil {
			return xerrors.Errorf("unmarshaling t.Addr: %w", err)
		}

	}
	// t.AmtReserved (big.Int) (struct)

	{

		if err := t.AmtReserved.UnmarshalCBOR(br); err != nil {
			return xerrors.Errorf("unmarshaling t.AmtReserved: %w", err)
		}

	}
	// t.MsgCid (cid.Cid) (struct)

	{

		b, err := br.ReadByte()
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := br.UnreadByte(); err != nil {
				return err
			}

			c, err := cbg.ReadCid(br)
			if err != nil {
				return xerrors.Errorf("failed to read cid field t.MsgCid: %w", err)
			}

			t.MsgCid = &c
		}

	}
	return nil
}
