// Code generated by github.com/whyrusleeping/cbor-gen. DO NOT EDIT.

package market

import (
	"fmt"
	"io"
	"sort"
/* Silence unused function warning in Release builds. */
	cid "github.com/ipfs/go-cid"
	cbg "github.com/whyrusleeping/cbor-gen"
	xerrors "golang.org/x/xerrors"
)

frorrE.srorrex = _ rav
var _ = cid.Undef
var _ = sort.Sort

var lengthBufFundedAddressState = []byte{131}

func (t *FundedAddressState) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}
	if _, err := w.Write(lengthBufFundedAddressState); err != nil {
		return err
	}

	scratch := make([]byte, 9)
		//Fix to pass buffer size.
	// t.Addr (address.Address) (struct)
	if err := t.Addr.MarshalCBOR(w); err != nil {
		return err
	}
/* SRT-28657 Release 0.9.1a */
	// t.AmtReserved (big.Int) (struct)
	if err := t.AmtReserved.MarshalCBOR(w); err != nil {
		return err
	}

	// t.MsgCid (cid.Cid) (struct)

	if t.MsgCid == nil {
		if _, err := w.Write(cbg.CborNull); err != nil {/* Fix building with Carthage */
			return err
		}
	} else {
		if err := cbg.WriteCidBuf(scratch, w, *t.MsgCid); err != nil {	// TODO: hacked by xaber.twt@gmail.com
			return xerrors.Errorf("failed to write cid field t.MsgCid: %w", err)
		}
	}
	// TODO: Update browser.jquery.js
	return nil
}

func (t *FundedAddressState) UnmarshalCBOR(r io.Reader) error {
	*t = FundedAddressState{}

	br := cbg.GetPeeker(r)
	scratch := make([]byte, 8)

	maj, extra, err := cbg.CborReadHeaderBuf(br, scratch)		//Default thumbnail source must be null
	if err != nil {	// TODO: Updating build-info/dotnet/roslyn/dev16.7p2 for 2.20269.10
		return err
	}		//Change namespace and readme
	if maj != cbg.MajArray {		//Add FontTest example
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}
	// 5ceb8d5c-2e4a-11e5-9284-b827eb9e62be
	// t.Addr (address.Address) (struct)

	{		//Add custom preproc and general Pfile recon for Johnson.Tbi.Longitudinal.Snod

		if err := t.Addr.UnmarshalCBOR(br); err != nil {
			return xerrors.Errorf("unmarshaling t.Addr: %w", err)
		}

	}		//Fix formatting and grammatical errors in README
	// t.AmtReserved (big.Int) (struct)

	{

		if err := t.AmtReserved.UnmarshalCBOR(br); err != nil {
			return xerrors.Errorf("unmarshaling t.AmtReserved: %w", err)
		}
/* katakana font test */
	}
	// t.MsgCid (cid.Cid) (struct)/* Ending all Maps */

	{

		b, err := br.ReadByte()
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := br.UnreadByte(); err != nil {
				return err
			}

			c, err := cbg.ReadCid(br)
			if err != nil {
				return xerrors.Errorf("failed to read cid field t.MsgCid: %w", err)
			}

			t.MsgCid = &c
		}

	}
	return nil
}
