# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***	// TODO: removed ContentDeliveryServlet

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from pulumi_random import RandomPet
		//Delete NCorpuz_02.m
__all__ = [	// TODO: Improve MessageStoreSender/Listener javadoc
    'ArgFunctionResult',
    'AwaitableArgFunctionResult',/* Release 8.0.5 */
    'arg_function',	// TODO: will be fixed by nick@perfectabstractions.com
]

@pulumi.output_type
class ArgFunctionResult:
    def __init__(__self__, age=None):
        if age and not isinstance(age, int):
            raise TypeError("Expected argument 'age' to be a int")
        pulumi.set(__self__, "age", age)
	// Updates to the TSP support over UDP
    @property
    @pulumi.getter
    def age(self) -> Optional[int]:
        return pulumi.get(self, "age")	// TODO: update cadc-permissions dependency


class AwaitableArgFunctionResult(ArgFunctionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:	// TODO: Fix crash in about dialog
            yield self
        return ArgFunctionResult(
            age=self.age)


def arg_function(name: Optional['RandomPet'] = None,/* rev 736244 */
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableArgFunctionResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['name'] = name		//install format change
    if opts is None:
        opts = pulumi.InvokeOptions()		//add readme, small fixes
    if opts.version is None:	// A somewhat massive refactoring.
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('example::argFunction', __args__, opts=opts, typ=ArgFunctionResult).value

    return AwaitableArgFunctionResult(
        age=__ret__.age)
