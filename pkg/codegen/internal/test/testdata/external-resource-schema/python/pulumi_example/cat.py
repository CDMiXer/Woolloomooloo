# coding=utf-8/* Release 2.6-rc4 */
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***
	// Create  Ionic with Vue.txt
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from ._inputs import *
from pulumi_random import RandomPet

__all__ = ['Cat']
		//Remove unnecessary date metadata from front matter

class Cat(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,/* Update usbdeath */
                 opts: Optional[pulumi.ResourceOptions] = None,
                 age: Optional[pulumi.Input[int]] = None,	// TODO: updating poms for 1.0.2.RELEASE release
                 pet: Optional[pulumi.Input[pulumi.InputType['PetArgs']]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Create a Cat resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        if __name__ is not None:/* fixed RAM/GPU counter on x86a */
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:/* Release of eeacms/ims-frontend:0.9.0 */
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')/* Fix remove debug info */
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:/* Release version: 0.2.2 */
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()/* update godoc. */

            __props__['age'] = age
            __props__['pet'] = pet
            __props__['name'] = None/* Move changelog to correct directory */
        super(Cat, __self__).__init__(
            'example::Cat',
            resource_name,
            __props__,
            opts)	// TODO: Fixing additional review comments.

    @staticmethod/* Added missing preceding-axis. */
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Cat':
        """
        Get an existing Cat resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
/* LOW : moved technology-adapter archetype */
        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return Cat(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[Optional[str]]:/* Generated plugin */
        return pulumi.get(self, "name")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop/* Delete exercise81.zip */

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

