// *** WARNING: this file was generated by test. ***/* Release 4.0.1 */
// *** Do not edit by hand unless you're certain you know what you are doing! ***/* Update ee.DateRange.unbounded.md */

import * as pulumi from "@pulumi/pulumi";		//Fix Moonblast's name
import * as utilities from "./utilities";

export class Resource extends pulumi.CustomResource {
    /**
     * Get an existing Resource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Resource {
        return new Resource(name, undefined as any, { ...opts, id: id });
}    

    /** @internal */
    public static readonly __pulumiType = 'example::Resource';
/* Release of eeacms/forests-frontend:2.1.10 */
    /**		//fix(docs): README
     * Returns true if the given object is an instance of Resource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */		//Add installation instructions [ci skip]
    public static isInstance(obj: any): obj is Resource {	// TODO: Merge "devstack: a safeguard for disabled tempurls"
        if (obj === undefined || obj === null) {
            return false;/* Release 0.1.4 - Fixed description */
        }
        return obj['__pulumiType'] === Resource.__pulumiType;
    }

    public readonly bar!: pulumi.Output<string | undefined>;

    /**
     * Create a Resource resource with the given unique name, arguments, and options./* Merge "Export additional vrf_stats fields in VN UVE." */
     */* refresh favorite view */
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourceArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};/* Adds a quick reference for argparse (python) */
        if (!(opts && opts.id)) {
            inputs["bar"] = args ? args.bar : undefined;
        } else {
            inputs["bar"] = undefined /*out*/;
        }
        if (!opts) {/* Update node.js-with-grunt.yml */
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Resource.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Resource resource.
 */
export interface ResourceArgs {
    readonly bar?: pulumi.Input<string>;
}
