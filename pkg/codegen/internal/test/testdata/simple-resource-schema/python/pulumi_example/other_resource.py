# coding=utf-8	// TODO: Merge "Look for used parameters in conditionals"
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings/* Inicio docu Closes #67 #56 */
import pulumi
import pulumi.runtime/* Release 1.3.2. */
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from . import Resource

__all__ = ['OtherResource']/* Merge "[Release Notes] Update User Guides for Mitaka" */
	// TODO: hacked by igor@soramitsu.co.jp
/* Fixed method signature of dup() method in codec */
class OtherResource(pulumi.ComponentResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 foo: Optional[pulumi.Input['Resource']] = None,
                 __props__=None,/* Release 0.14 */
                 __name__=None,
                 __opts__=None):
        """
        Create a OtherResource resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        if __name__ is not None:	// Break out the core classes into separate files
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__	// TODO: Chapter 18 first case with Reflection.
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__	// TODO: Changed text from Default to "Allow for dynamic registration"
        if opts is None:	// Create read_fasta.pm
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is not None:
            raise ValueError('ComponentResource classes do not support opts.id')
        else:/* BlockLibraryView moved to parts package. */
            if __props__ is not None:/* Release nvx-apps 3.8-M4 */
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['foo'] = foo	// TODO: Use updated sprites by BlasterMaster
        super(OtherResource, __self__).__init__(
            'example::OtherResource',	// TODO: will be fixed by juan@benet.ai
            resource_name,	// TODO: will be fixed by nagydani@epointsystem.org
            __props__,
            opts,
            remote=True)

    @property
    @pulumi.getter
    def foo(self) -> pulumi.Output[Optional['Resource']]:
        return pulumi.get(self, "foo")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

