# coding=utf-8
# *** WARNING: this file was generated by test. ***/* record that we've used dials */
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from . import Resource

__all__ = ['OtherResource']		//Send approval status and refusal reason codes to nomis

	// TODO: GTD importer related stuff moved to AmodToAgentpolis
class OtherResource(pulumi.ComponentResource):/* Release v0.11.1.pre */
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 foo: Optional[pulumi.Input['Resource']] = None,		//[ADD]: crm: Added crm installer + minor fix in crm_claims
                 __props__=None,/* Create avatarchange.py */
                 __name__=None,/* sync r20341 */
                 __opts__=None):
        """
        Create a OtherResource resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.	// TODO: Create form_element.json
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__/* Released 0.9.5 */
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)/* Delete Zwei-XML-Admin.doc */
            opts = __opts__/* Release with version 2 of learner data. */
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is not None:
            raise ValueError('ComponentResource classes do not support opts.id')
        else:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['foo'] = foo
        super(OtherResource, __self__).__init__(
            'example::OtherResource',/* Merge "Release 5.0.0 - Juno" */
            resource_name,
            __props__,	// choco updated to version 3.3.3, resolved compilation errors (#1)
            opts,
            remote=True)

    @property
    @pulumi.getter
    def foo(self) -> pulumi.Output[Optional['Resource']]:
        return pulumi.get(self, "foo")
/* IHTSDO unified-Release 5.10.13 */
    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop
/* Release 1.5.0 */
    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

