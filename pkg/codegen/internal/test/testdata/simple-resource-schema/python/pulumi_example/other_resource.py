# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***/* Remove old session service.  */

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from . import Resource

__all__ = ['OtherResource']/* Changed App name */


class OtherResource(pulumi.ComponentResource):		//Fixing a typo in help (back->forward)
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,	// Commit examples files
                 foo: Optional[pulumi.Input['Resource']] = None,/* Releases typo */
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Create a OtherResource resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__/* Create ptmf2pcap.pl */
        if opts is None:/* Release V1.0.1 */
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):		//Delete Shade Automation Demo.zip
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:/* Create 6kyu_numerical_palindrome2.py */
            opts.version = _utilities.get_version()	// TODO: Rename docs/unix.md to docs/tutorials/unix.md
        if opts.id is not None:
            raise ValueError('ComponentResource classes do not support opts.id')
        else:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')/* chore(deps): update dependency fixturify to v1 */
            __props__ = dict()/* support writing. */

            __props__['foo'] = foo
        super(OtherResource, __self__).__init__(
            'example::OtherResource',
            resource_name,	// TODO: hacked by steven@stebalien.com
            __props__,/* Release 1-136. */
            opts,
            remote=True)

    @property
    @pulumi.getter
    def foo(self) -> pulumi.Output[Optional['Resource']]:
        return pulumi.get(self, "foo")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

