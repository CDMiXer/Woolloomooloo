# coding=utf-8
# *** WARNING: this file was generated by test. ***/* Release commit for 2.0.0-a16485a. */
# *** Do not edit by hand unless you're certain you know what you are doing! ***
		//Update TeknoMobi.css
import warnings
import pulumi
import pulumi.runtime		//Gtkmm 3.0 fixes for debug dialog
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables	// Create distributed-network-systems.md
from . import Resource

__all__ = [	// TODO: fixed wrong doc link
    'ArgFunctionResult',
    'AwaitableArgFunctionResult',
    'arg_function',
]
	// TODO: will be fixed by martin2cai@hotmail.com
@pulumi.output_type/* add 0.3 Release */
class ArgFunctionResult:
    def __init__(__self__, result=None):
        if result and not isinstance(result, Resource):	// Update clear_creek.json
            raise TypeError("Expected argument 'result' to be a Resource")
        pulumi.set(__self__, "result", result)
	// TODO: Update MapGen
    @property
    @pulumi.getter/* Cleanup and more output */
    def result(self) -> Optional['Resource']:
        return pulumi.get(self, "result")


class AwaitableArgFunctionResult(ArgFunctionResult):		//Merge branch 'master' into luidmoment.fixes
    # pylint: disable=using-constant-test
    def __await__(self):/* Release of eeacms/eprtr-frontend:0.3-beta.15 */
        if False:
            yield self
        return ArgFunctionResult(
            result=self.result)
/* Updated Vivaldi Browser to Stable Release */

def arg_function(arg1: Optional['Resource'] = None,	// Add link to update-data command.
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableArgFunctionResult:
    """
    Use this data source to access information about an existing resource.
"""    
    __args__ = dict()
    __args__['arg1'] = arg1
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('example::argFunction', __args__, opts=opts, typ=ArgFunctionResult).value

    return AwaitableArgFunctionResult(
        result=__ret__.result)
