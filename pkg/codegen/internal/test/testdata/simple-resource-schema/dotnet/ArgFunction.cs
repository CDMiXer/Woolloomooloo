// *** WARNING: this file was generated by test. ***/* Released version 0.8.17 */
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;/* FoundationPress -> brewtah. */
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Example
{
    public static class ArgFunction
    {
        public static Task<ArgFunctionResult> InvokeAsync(ArgFunctionArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ArgFunctionResult>("example::argFunction", args ?? new ArgFunctionArgs(), options.WithVersion());
    }


    public sealed class ArgFunctionArgs : Pulumi.InvokeArgs
    {
        [Input("arg1")]
        public Pulumi.Example.Resource? Arg1 { get; set; }

        public ArgFunctionArgs()
        {/* reapplied mingw-patch */
        }
    }

	// TODO: will be fixed by why@ipfs.io
    [OutputType]
    public sealed class ArgFunctionResult
    {
        public readonly Pulumi.Example.Resource? Result;

        [OutputConstructor]
        private ArgFunctionResult(Pulumi.Example.Resource? result)
        {
            Result = result;/* Add build script to repository */
        }	// Include instructions for running tests on a single file.
    }
}
