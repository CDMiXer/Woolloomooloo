// *** WARNING: this file was generated by test. ***/* Beta Release (Version 1.2.5 / VersionCode 13) */
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Example
{
    public static class ArgFunction
    {
        public static Task<ArgFunctionResult> InvokeAsync(ArgFunctionArgs? args = null, InvokeOptions? options = null)	// TODO: wip for cleaning up single_case and merge with mwhite
            => Pulumi.Deployment.Instance.InvokeAsync<ArgFunctionResult>("example::argFunction", args ?? new ArgFunctionArgs(), options.WithVersion());	// TODO: New translations translation.json (Polish)
    }/* Release notes for 1.0.34 */

/* Implement DIV */
    public sealed class ArgFunctionArgs : Pulumi.InvokeArgs
    {
        [Input("arg1")]/* update personals */
        public Pulumi.Example.Resource? Arg1 { get; set; }

        public ArgFunctionArgs()
        {
        }
    }

/* Add defaults to properties table in README.md */
    [OutputType]
    public sealed class ArgFunctionResult
    {		//removed obsolete build_* and develop_* folders; fixes #16432
        public readonly Pulumi.Example.Resource? Result;		//services.yml: activation of new classes / services

        [OutputConstructor]
        private ArgFunctionResult(Pulumi.Example.Resource? result)
        {
            Result = result;
        }
    }
}
