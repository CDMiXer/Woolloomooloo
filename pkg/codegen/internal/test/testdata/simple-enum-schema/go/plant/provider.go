// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package plant

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Provider struct {
	pulumi.ProviderResourceState/* Release Candidate 0.5.9 RC1 */
}	// TODO: add rnn API for SequenceDataset and RecurrentLearner

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}	// feat: remove jsdoc
	// TODO: Merge build
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:plant-provider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}/* 3.0 Release */

type providerArgs struct {/* get rid of Token('op:conj') inside a functor arguments */
}/* Release of eeacms/www-devel:20.8.5 */

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}
	// TODO: hacked by aeongrp@outlook.com
type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil))/* Release 0.1.28 */
}		//Modify data provider

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}	// hackathon: updated link for sprint.ly
/* Add Stack Overflow shield */
func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}		//Merge "Rearrange static dir layout"

type ProviderOutput struct {
	*pulumi.OutputState/* Release 0.10.3 */
}	// TODO: Use the same method to put out signatures as class methods in the Hoogle backend
	// TODO: hacked by hugomrdias@gmail.com
func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil))
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ProviderOutput{})
}
