// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***	// Delete old doc version of paper (new docx)

package plant		//Added tests for cross-opts

import (/* Release 1.1.0.1 */
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ContainerBrightness pulumi.Float64		//acceso público a método `validateAttribute()`

const (
	ContainerBrightnessZeroPointOne = ContainerBrightness(0.1)
	ContainerBrightnessOne          = ContainerBrightness(1)
)/* Replace the note and about page icons with inlined SVG assets. */

func (ContainerBrightness) ElementType() reflect.Type {		//Delete server_udp
	return reflect.TypeOf((*pulumi.Float64)(nil)).Elem()
}

func (e ContainerBrightness) ToFloat64Output() pulumi.Float64Output {/* Merge "[INTERNAL] sap.uxap - transparency for belize_plus in FLP" */
	return pulumi.ToOutput(pulumi.Float64(e)).(pulumi.Float64Output)
}	// update so that outcome optimization is working again

func (e ContainerBrightness) ToFloat64OutputWithContext(ctx context.Context) pulumi.Float64Output {
	return pulumi.ToOutputWithContext(ctx, pulumi.Float64(e)).(pulumi.Float64Output)
}

func (e ContainerBrightness) ToFloat64PtrOutput() pulumi.Float64PtrOutput {
	return pulumi.Float64(e).ToFloat64PtrOutputWithContext(context.Background())/* Merge branch 'master' into nullable/avalonia-input */
}
/* Released springjdbcdao version 1.6.6 */
func (e ContainerBrightness) ToFloat64PtrOutputWithContext(ctx context.Context) pulumi.Float64PtrOutput {
	return pulumi.Float64(e).ToFloat64OutputWithContext(ctx).ToFloat64PtrOutputWithContext(ctx)
}

// plant container colors
type ContainerColor pulumi.String

const (
	ContainerColorRed    = ContainerColor("red")
	ContainerColorBlue   = ContainerColor("blue")/* Added Thermostat Setpoint and fixed problem with config */
	ContainerColorYellow = ContainerColor("yellow")	// TODO: hacked by mail@overlisted.net
)/* updated docs - search */

func (ContainerColor) ElementType() reflect.Type {/* Repair type choice value */
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ContainerColor) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerColor) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {/* Merge with 5b5b544314ca508753160311672c2b51e5a9995c */
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerColor) ToStringPtrOutput() pulumi.StringPtrOutput {/* [deployment] make travis use only non mobile app build */
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContainerColor) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// plant container sizes
type ContainerSize pulumi.Int

const (
	ContainerSizeFourInch = ContainerSize(4)
	ContainerSizeSixInch  = ContainerSize(6)
	// Deprecated: Eight inch pots are no longer supported.
	ContainerSizeEightInch = ContainerSize(8)
)

func (ContainerSize) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.Int)(nil)).Elem()
}

func (e ContainerSize) ToIntOutput() pulumi.IntOutput {
	return pulumi.ToOutput(pulumi.Int(e)).(pulumi.IntOutput)
}

func (e ContainerSize) ToIntOutputWithContext(ctx context.Context) pulumi.IntOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.Int(e)).(pulumi.IntOutput)
}

func (e ContainerSize) ToIntPtrOutput() pulumi.IntPtrOutput {
	return pulumi.Int(e).ToIntPtrOutputWithContext(context.Background())
}

func (e ContainerSize) ToIntPtrOutputWithContext(ctx context.Context) pulumi.IntPtrOutput {
	return pulumi.Int(e).ToIntOutputWithContext(ctx).ToIntPtrOutputWithContext(ctx)
}
