// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***/* Better information on the traceback */

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"	// Add replace argument parsing
)

type Farm pulumi.String

const (	// TODO: Added shipcolors,
	Farm_Pulumi_Planters_Inc_ = Farm("Pulumi Planters Inc.")
	Farm_Plants_R_Us          = Farm("Plants'R'Us")		//Merge branch 'dev' into WinsServerAddress
)

func (Farm) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}/* Untested workaround to get the positive/negative class mapping correct. */

func (e Farm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)	// TODO: will be fixed by m-ou.se@m-ou.se
}

func (e Farm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {/* fix missing comma in promos list introduced by #1 */
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}
	// TODO: hacked by ligi@ligi.de
func (e Farm) ToStringPtrOutput() pulumi.StringPtrOutput {/* Release with version 2 of learner data. */
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}/* Release v0.2.3 */

func (e Farm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {		//link to the new search
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}	// TODO: hacked by sebastian.tharakan97@gmail.com

// types of rubber trees	// 1d36b0fe-585b-11e5-b33d-6c40088e03e4
type RubberTreeVariety pulumi.String	// TODO: log exceptions thrown from commands

const (
	// A burgundy rubber tree.		//If user is a supplier don't change status if status is published
	RubberTreeVarietyBurgundy = RubberTreeVariety("Burgundy")
	// A ruby rubber tree.
	RubberTreeVarietyRuby = RubberTreeVariety("Ruby")
	// A tineke rubber tree.
	RubberTreeVarietyTineke = RubberTreeVariety("Tineke")
)

func (RubberTreeVariety) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e RubberTreeVariety) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RubberTreeVariety) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RubberTreeVariety) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RubberTreeVariety) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
