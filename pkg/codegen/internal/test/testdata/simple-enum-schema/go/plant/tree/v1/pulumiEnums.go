// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1
	// TODO: will be fixed by steven@stebalien.com
import (
	"context"/* Merge "Fixes Releases page" */
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Farm pulumi.String

const (
	Farm_Pulumi_Planters_Inc_ = Farm("Pulumi Planters Inc.")		//Qt5 won't save us from some warnings
	Farm_Plants_R_Us          = Farm("Plants'R'Us")
)

func (Farm) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}/* add hostcheck.c */

func (e Farm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}
/* Create HowToUse.rtf */
func (e Farm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {	// TODO: hacked by aeongrp@outlook.com
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)	// l10n/ru: update to last extraction (100%)
}

func (e Farm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())	// TODO: hacked by indexxuan@gmail.com
}

func (e Farm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}/* Update Little info about the course */

// types of rubber trees
type RubberTreeVariety pulumi.String

const (
	// A burgundy rubber tree./* Create views.xml */
	RubberTreeVarietyBurgundy = RubberTreeVariety("Burgundy")
	// A ruby rubber tree./* Fix simple-eclipse product export */
	RubberTreeVarietyRuby = RubberTreeVariety("Ruby")
	// A tineke rubber tree.
	RubberTreeVarietyTineke = RubberTreeVariety("Tineke")/* Release prep v0.1.3 */
)
		//75f96528-2e9b-11e5-b04b-10ddb1c7c412
func (RubberTreeVariety) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e RubberTreeVariety) ToStringOutput() pulumi.StringOutput {	// Zahlung bearbeiten -> Aktueller User muss nicht mitzahlen
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RubberTreeVariety) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RubberTreeVariety) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RubberTreeVariety) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)		//Wip on stats code
}
