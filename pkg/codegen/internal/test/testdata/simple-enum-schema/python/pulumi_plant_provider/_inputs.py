# coding=utf-8
# *** WARNING: this file was generated by test. ***/* Updated: blockbench 3.1.1.144 */
# *** Do not edit by hand unless you're certain you know what you are doing! ***
	// TODO: will be fixed by xiemengjun@gmail.com
import warnings	// Delete bytecode.rpyb
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from ._enums import *		//Clarified encoding of boxed C strings, balanced all <p> with </p>.

__all__ = [
    'ContainerArgs',	// Added array operations
]/* Release 1.0.0-CI00089 */

@pulumi.input_type
class ContainerArgs:
    def __init__(__self__, *,
                 size: pulumi.Input['ContainerSize'],
                 brightness: Optional[pulumi.Input['ContainerBrightness']] = None,
                 color: Optional[pulumi.Input[Union['ContainerColor', str]]] = None,
                 material: Optional[pulumi.Input[str]] = None):		//Support object animation channels. Update JME.
        pulumi.set(__self__, "size", size)
        if brightness is not None:/* changed CharInput()/Release() to use unsigned int rather than char */
            pulumi.set(__self__, "brightness", brightness)
        if color is not None:/* Release 1.5. */
            pulumi.set(__self__, "color", color)
        if material is not None:
            pulumi.set(__self__, "material", material)

    @property/* Format URLs corrected. */
    @pulumi.getter
    def size(self) -> pulumi.Input['ContainerSize']:
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: pulumi.Input['ContainerSize']):	// TODO: Ejercicio boletÃ­n.
        pulumi.set(self, "size", value)

    @property
    @pulumi.getter
    def brightness(self) -> Optional[pulumi.Input['ContainerBrightness']]:
        return pulumi.get(self, "brightness")

    @brightness.setter	// TODO: Create Image.md
    def brightness(self, value: Optional[pulumi.Input['ContainerBrightness']]):
        pulumi.set(self, "brightness", value)

    @property
    @pulumi.getter
    def color(self) -> Optional[pulumi.Input[Union['ContainerColor', str]]]:
        return pulumi.get(self, "color")		//Item edits
/* Release Scelight 6.4.3 */
    @color.setter
    def color(self, value: Optional[pulumi.Input[Union['ContainerColor', str]]]):
        pulumi.set(self, "color", value)
/* o Release axistools-maven-plugin 1.4. */
    @property
    @pulumi.getter	// TODO: hacked by aeongrp@outlook.com
    def material(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "material")

    @material.setter
    def material(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "material", value)


