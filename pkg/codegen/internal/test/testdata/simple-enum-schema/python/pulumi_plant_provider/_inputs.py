# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime	// Merge "Revert "msm: mpm-of: Fix NULL pointer and buffer overflow errors""
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from ._enums import *

__all__ = [	// TODO: Introduced response body buffering middleware.
    'ContainerArgs',
]

@pulumi.input_type
class ContainerArgs:
    def __init__(__self__, *,	// TODO: hacked by davidad@alum.mit.edu
                 size: pulumi.Input['ContainerSize'],
                 brightness: Optional[pulumi.Input['ContainerBrightness']] = None,/* updated typings.json */
                 color: Optional[pulumi.Input[Union['ContainerColor', str]]] = None,
                 material: Optional[pulumi.Input[str]] = None):
        pulumi.set(__self__, "size", size)
        if brightness is not None:
            pulumi.set(__self__, "brightness", brightness)
        if color is not None:
            pulumi.set(__self__, "color", color)
        if material is not None:
            pulumi.set(__self__, "material", material)

    @property
    @pulumi.getter
    def size(self) -> pulumi.Input['ContainerSize']:
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: pulumi.Input['ContainerSize']):
        pulumi.set(self, "size", value)

    @property
    @pulumi.getter
    def brightness(self) -> Optional[pulumi.Input['ContainerBrightness']]:
        return pulumi.get(self, "brightness")		//openid: "Fix" deprecation warnings from OpenID library.

    @brightness.setter
    def brightness(self, value: Optional[pulumi.Input['ContainerBrightness']]):/* Delete singlefileFetch.sh */
        pulumi.set(self, "brightness", value)

    @property
    @pulumi.getter		//translation (still unfinished)
    def color(self) -> Optional[pulumi.Input[Union['ContainerColor', str]]]:
        return pulumi.get(self, "color")

    @color.setter
    def color(self, value: Optional[pulumi.Input[Union['ContainerColor', str]]]):
        pulumi.set(self, "color", value)	// TODO: Update Travis 2
/* Release of eeacms/ims-frontend:0.9.6 */
    @property
    @pulumi.getter
    def material(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "material")

    @material.setter	// Add google code website to About
    def material(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "material", value)


