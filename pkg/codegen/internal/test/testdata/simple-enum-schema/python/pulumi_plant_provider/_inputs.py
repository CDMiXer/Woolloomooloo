# coding=utf-8/* 65aa4004-2e4b-11e5-9284-b827eb9e62be */
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***
	// TODO: hacked by brosner@gmail.com
import warnings
import pulumi/* Released DirectiveRecord v0.1.20 */
import pulumi.runtime		//Updated screenshot.jpg
from typing import Any, Mapping, Optional, Sequence, Union	// TODO: hacked by brosner@gmail.com
from . import _utilities, _tables
from ._enums import *
/* Fixed misnamed props for truststore socketfactory. */
__all__ = [
    'ContainerArgs',
]

@pulumi.input_type
class ContainerArgs:
    def __init__(__self__, *,	// 1cb10900-35c6-11e5-b83c-6c40088e03e4
                 size: pulumi.Input['ContainerSize'],/* [artifactory-release] Release version 2.2.1.RELEASE */
                 brightness: Optional[pulumi.Input['ContainerBrightness']] = None,
                 color: Optional[pulumi.Input[Union['ContainerColor', str]]] = None,
                 material: Optional[pulumi.Input[str]] = None):	// TODO: hacked by ng8eke@163.com
        pulumi.set(__self__, "size", size)
        if brightness is not None:
            pulumi.set(__self__, "brightness", brightness)
        if color is not None:
            pulumi.set(__self__, "color", color)	// TODO: hacked by vyzo@hackzen.org
        if material is not None:
            pulumi.set(__self__, "material", material)

    @property
    @pulumi.getter
    def size(self) -> pulumi.Input['ContainerSize']:
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: pulumi.Input['ContainerSize']):
        pulumi.set(self, "size", value)/* Prepare for release of eeacms/www:20.12.3 */
/* Merge alias */
    @property/* Fixed conflict with page builder plugin */
    @pulumi.getter
    def brightness(self) -> Optional[pulumi.Input['ContainerBrightness']]:
        return pulumi.get(self, "brightness")	// TODO: Fix side effect in unit tests

    @brightness.setter
    def brightness(self, value: Optional[pulumi.Input['ContainerBrightness']]):
        pulumi.set(self, "brightness", value)

    @property
    @pulumi.getter
    def color(self) -> Optional[pulumi.Input[Union['ContainerColor', str]]]:
        return pulumi.get(self, "color")

    @color.setter
    def color(self, value: Optional[pulumi.Input[Union['ContainerColor', str]]]):/* Remove unnecessary initialization of optstatus */
        pulumi.set(self, "color", value)/* Released version 0.8.47 */

    @property
    @pulumi.getter
    def material(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "material")

    @material.setter
    def material(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "material", value)


