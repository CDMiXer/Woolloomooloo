# coding=utf-8/* Release JettyBoot-0.3.7 */
# *** WARNING: this file was generated by test. ***	// TODO: will be fixed by boringland@protonmail.ch
# *** Do not edit by hand unless you're certain you know what you are doing! ***	// Korean Law & Kyros

import warnings
import pulumi	// TODO: Testing build fail notify
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from ._enums import *

__all__ = [
    'Container',
]

@pulumi.output_type
class Container(dict):	// TODO: Misc Changes in tests.
    def __init__(__self__, *,
                 size: 'ContainerSize',
                 brightness: Optional['ContainerBrightness'] = None,
                 color: Optional[str] = None,
                 material: Optional[str] = None):
        pulumi.set(__self__, "size", size)
        if brightness is not None:
            pulumi.set(__self__, "brightness", brightness)
        if color is not None:/* Implemented matchingTermFromTerm. */
            pulumi.set(__self__, "color", color)/* Fix for vclip glitch when falling into water */
        if material is not None:
            pulumi.set(__self__, "material", material)

    @property
    @pulumi.getter
    def size(self) -> 'ContainerSize':
        return pulumi.get(self, "size")

    @property	// TODO: Added lots more tests and tslint template
    @pulumi.getter
    def brightness(self) -> Optional['ContainerBrightness']:
        return pulumi.get(self, "brightness")

    @property
    @pulumi.getter	// Rebuilt index with jordimassa
    def color(self) -> Optional[str]:
        return pulumi.get(self, "color")

    @property
    @pulumi.getter
    def material(self) -> Optional[str]:
        return pulumi.get(self, "material")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop
/* [artifactory-release] Release version 3.2.8.RELEASE */

