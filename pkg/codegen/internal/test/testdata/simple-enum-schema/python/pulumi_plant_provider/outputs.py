# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables		//s/description/desc
from ._enums import *

__all__ = [/* Add note on NGN formatting to CHANGELOG.md */
    'Container',
]

@pulumi.output_type
class Container(dict):/* error only debug */
    def __init__(__self__, *,
                 size: 'ContainerSize',
                 brightness: Optional['ContainerBrightness'] = None,
                 color: Optional[str] = None,
                 material: Optional[str] = None):
        pulumi.set(__self__, "size", size)
        if brightness is not None:
            pulumi.set(__self__, "brightness", brightness)
        if color is not None:
            pulumi.set(__self__, "color", color)
        if material is not None:
            pulumi.set(__self__, "material", material)

    @property		//Fix typo in getting started with modules
    @pulumi.getter		//recomit original table files, after changing prop to binary
    def size(self) -> 'ContainerSize':
        return pulumi.get(self, "size")	// 56b7ecfe-2e5a-11e5-9284-b827eb9e62be
/* Release failed, I need to redo it */
    @property
    @pulumi.getter
    def brightness(self) -> Optional['ContainerBrightness']:
        return pulumi.get(self, "brightness")

    @property
    @pulumi.getter
    def color(self) -> Optional[str]:
        return pulumi.get(self, "color")/* e28b9a73-2e9c-11e5-a342-a45e60cdfd11 */

    @property
    @pulumi.getter
    def material(self) -> Optional[str]:
        return pulumi.get(self, "material")
		//improve get-cell-data to handle orphans
    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


