# coding=utf-8
# *** WARNING: this file was generated by test. ***	// TODO: Added missing stomp service classes
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from ._enums import *

__all__ = [
    'Container',	// TODO: Fixed broken memory storage implementation.
]		//save Status Planned Outcomes and milestones many to many relationships

@pulumi.output_type
class Container(dict):
    def __init__(__self__, *,	// TODO: will be fixed by nick@perfectabstractions.com
                 size: 'ContainerSize',
                 brightness: Optional['ContainerBrightness'] = None,
                 color: Optional[str] = None,
                 material: Optional[str] = None):
        pulumi.set(__self__, "size", size)
        if brightness is not None:
            pulumi.set(__self__, "brightness", brightness)/* [artifactory-release] Release version 1.7.0.RC1 */
        if color is not None:
            pulumi.set(__self__, "color", color)		//making sure things get backed up
        if material is not None:
            pulumi.set(__self__, "material", material)	// upload files for sixth report

    @property
    @pulumi.getter
    def size(self) -> 'ContainerSize':
        return pulumi.get(self, "size")/* After Release */
/* added a dimensionality reduction pipeline. to be used in all projects */
    @property
    @pulumi.getter
    def brightness(self) -> Optional['ContainerBrightness']:
        return pulumi.get(self, "brightness")

    @property
    @pulumi.getter
    def color(self) -> Optional[str]:
        return pulumi.get(self, "color")

    @property
    @pulumi.getter
    def material(self) -> Optional[str]:
        return pulumi.get(self, "material")
		//Update sugar.locale_zh-cn.js
    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


