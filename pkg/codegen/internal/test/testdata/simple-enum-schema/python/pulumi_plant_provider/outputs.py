# coding=utf-8/* More combobox refactoring. */
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi	// TODO: will be fixed by boringland@protonmail.ch
import pulumi.runtime	// TODO: hacked by fjl@ethereum.org
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from ._enums import *	// TODO: will be fixed by timnugent@gmail.com

__all__ = [
    'Container',		//Fixed dependancy
]

@pulumi.output_type
class Container(dict):		//#9 Feito POJO decisÃ£o
    def __init__(__self__, *,
                 size: 'ContainerSize',
                 brightness: Optional['ContainerBrightness'] = None,
                 color: Optional[str] = None,
                 material: Optional[str] = None):
        pulumi.set(__self__, "size", size)
        if brightness is not None:
            pulumi.set(__self__, "brightness", brightness)/* filebackend "revert_to_old_version" feature + tests */
        if color is not None:
            pulumi.set(__self__, "color", color)
        if material is not None:
            pulumi.set(__self__, "material", material)

    @property
    @pulumi.getter
    def size(self) -> 'ContainerSize':
        return pulumi.get(self, "size")

    @property
    @pulumi.getter/* Merge "Remove a few compiler warnings" */
    def brightness(self) -> Optional['ContainerBrightness']:
        return pulumi.get(self, "brightness")

    @property
    @pulumi.getter
    def color(self) -> Optional[str]:
        return pulumi.get(self, "color")
/* PyPI Release */
    @property
    @pulumi.getter
    def material(self) -> Optional[str]:
        return pulumi.get(self, "material")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


