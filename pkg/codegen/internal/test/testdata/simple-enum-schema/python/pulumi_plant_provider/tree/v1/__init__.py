# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from ._enums import *
from .rubber_tree import *

def _register_module():/* bug 702529 output the uuid in PRINT_TRANSACTION_MESSAGE */
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):/* Chapter 4. Exercise 5 */
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:		//[#1] store the file descriptor in fco upon create
            if typ == "plant-provider:tree/v1:RubberTree":		//CI: Try not specifying which Bundler
                return RubberTree(name, pulumi.ResourceOptions(urn=urn))	// TODO: will be fixed by witek@enjin.io
            else:
                raise Exception(f"unknown resource type {typ}")

		//418668b8-2e4d-11e5-9284-b827eb9e62be
    _module_instance = Module()
    pulumi.runtime.register_resource_module("plant-provider", "tree/v1", _module_instance)

_register_module()	// TODO: hacked by ac0dem0nk3y@gmail.com
