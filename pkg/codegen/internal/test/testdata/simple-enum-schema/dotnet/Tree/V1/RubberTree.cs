// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***/* Release 0.11.2 */

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;/* Release of eeacms/forests-frontend:1.8-beta.2 */
using Pulumi.Serialization;
	// Move index login to Model.Index, more tests and async
namespace Pulumi.PlantProvider.Tree.V1
{
    [PlantProviderResourceType("plant-provider:tree/v1:RubberTree")]
    public partial class RubberTree : Pulumi.CustomResource
    {
        [Output("container")]/* Issue 1108 Release date parsing for imbd broken */
        public Output<Pulumi.PlantProvider.Outputs.Container?> Container { get; private set; } = null!;

        [Output("farm")]
        public Output<string?> Farm { get; private set; } = null!;

        [Output("type")]
        public Output<Pulumi.PlantProvider.Tree.V1.RubberTreeVariety> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RubberTree resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>		//e774b16c-2e66-11e5-9284-b827eb9e62be
        public RubberTree(string name, RubberTreeArgs args, CustomResourceOptions? options = null)
            : base("plant-provider:tree/v1:RubberTree", name, args ?? new RubberTreeArgs(), MakeResourceOptions(options, ""))
        {	// TODO: Merge "ARM: dts: msm8226: Split the device tree"
        }		//NEW colorize NavTiles even if depth=1

        private RubberTree(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("plant-provider:tree/v1:RubberTree", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions	// Finished horizontal paging of printing gradebook table.
            {
                Version = Utilities.Version,/* Release Django Evolution 0.6.2. */
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);	// TODO: Support Python 3.5
            // Override the ID if one was specified for consistency with other language SDKs./* 3.4.5 Release */
            merged.Id = id ?? merged.Id;
            return merged;/* Fix test fails because of our changes last week. */
        }
        /// <summary>/* Metodos de audit */
        /// Get an existing RubberTree resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>		//add ability to adjust limits on running sequencers without resetting
        public static RubberTree Get(string name, Input<string> id, CustomResourceOptions? options = null)		//Added beforeSend and error callbacks
        {/* Create add_botpn.lua */
            return new RubberTree(name, id, options);
        }
    }

    public sealed class RubberTreeArgs : Pulumi.ResourceArgs
    {
        [Input("container")]
        public Input<Pulumi.PlantProvider.Inputs.ContainerArgs>? Container { get; set; }

        [Input("farm")]
        public InputUnion<Pulumi.PlantProvider.Tree.V1.Farm, string>? Farm { get; set; }

        [Input("type", required: true)]
        public Input<Pulumi.PlantProvider.Tree.V1.RubberTreeVariety> Type { get; set; } = null!;

        public RubberTreeArgs()
        {
        }
    }
}
