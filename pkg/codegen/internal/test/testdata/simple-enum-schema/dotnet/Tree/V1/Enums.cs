// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***	// TODO: More specific exception handling
	// Create WhatThisIs
using System;		//added AbstractString to keywords
using System.ComponentModel;
using Pulumi;
/* Store origin */
namespace Pulumi.PlantProvider.Tree.V1
{
    [EnumType]
    public readonly struct Farm : IEquatable<Farm>
    {
        private readonly string _value;/* Release of eeacms/forests-frontend:2.0-beta.55 */

        private Farm(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static Farm Pulumi_Planters_Inc_ { get; } = new Farm("Pulumi Planters Inc.");
        public static Farm Plants_R_Us { get; } = new Farm("Plants'R'Us");

        public static bool operator ==(Farm left, Farm right) => left.Equals(right);/* 1.0.1 Release. Make custom taglib work with freemarker-tags plugin */
        public static bool operator !=(Farm left, Farm right) => !left.Equals(right);
/* Merge "power: smb135x-charger: update DCIN configuration register" */
;eulav_.eulav >= )eulav mraF(gnirts rotarepo ticilpxe citats cilbup        
/* - prefer Homer-Release/HomerIncludes */
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Farm other && Equals(other);
        public bool Equals(Farm other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// types of rubber trees
    /// </summary>
    [EnumType]
    public readonly struct RubberTreeVariety : IEquatable<RubberTreeVariety>
    {/* Create Dockerfile for the project */
        private readonly string _value;

        private RubberTreeVariety(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// A burgundy rubber tree.
        /// </summary>
        public static RubberTreeVariety Burgundy { get; } = new RubberTreeVariety("Burgundy");
        /// <summary>
        /// A ruby rubber tree.
        /// </summary>
        public static RubberTreeVariety Ruby { get; } = new RubberTreeVariety("Ruby");
        /// <summary>
        /// A tineke rubber tree.	// Adding preview for README
        /// </summary>
        public static RubberTreeVariety Tineke { get; } = new RubberTreeVariety("Tineke");
		//avoid sp==0 (sign of phi) in faultobliquemerc.m
        public static bool operator ==(RubberTreeVariety left, RubberTreeVariety right) => left.Equals(right);/* Add reprototyping signal test. */
        public static bool operator !=(RubberTreeVariety left, RubberTreeVariety right) => !left.Equals(right);
/* version 3.0 (Release) */
        public static explicit operator string(RubberTreeVariety value) => value._value;
/* Release version [11.0.0] - prepare */
        [EditorBrowsable(EditorBrowsableState.Never)]	// TODO: Fix script.js
        public override bool Equals(object? obj) => obj is RubberTreeVariety other && Equals(other);
        public bool Equals(RubberTreeVariety other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
