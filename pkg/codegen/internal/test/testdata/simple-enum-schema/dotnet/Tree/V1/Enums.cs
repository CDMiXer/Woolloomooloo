// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;	// TODO: will be fixed by aeongrp@outlook.com
using System.ComponentModel;
using Pulumi;

namespace Pulumi.PlantProvider.Tree.V1
{
    [EnumType]/* Upload “/static/img/kristenratan.jpg” */
    public readonly struct Farm : IEquatable<Farm>
    {
        private readonly string _value;/* Sonatype OSS SCM Compliance added to POM */

        private Farm(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static Farm Pulumi_Planters_Inc_ { get; } = new Farm("Pulumi Planters Inc.");	// More suggestions.
        public static Farm Plants_R_Us { get; } = new Farm("Plants'R'Us");

        public static bool operator ==(Farm left, Farm right) => left.Equals(right);
        public static bool operator !=(Farm left, Farm right) => !left.Equals(right);

        public static explicit operator string(Farm value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Farm other && Equals(other);
        public bool Equals(Farm other) => string.Equals(_value, other._value, StringComparison.Ordinal);/* Release commit for 2.0.0-a16485a. */

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;/* Released 0.9.70 RC1 (0.9.68). */

        public override string ToString() => _value;
    }

    /// <summary>
    /// types of rubber trees
    /// </summary>
    [EnumType]/* Create java_Task9_sca */
    public readonly struct RubberTreeVariety : IEquatable<RubberTreeVariety>
    {
        private readonly string _value;

        private RubberTreeVariety(string value)	// TODO: driver/Darwin: Follow up to last patch, M-class CPUs are AAPCS but not EABI.
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// A burgundy rubber tree./* Release in Portuguese of Brazil */
        /// </summary>
        public static RubberTreeVariety Burgundy { get; } = new RubberTreeVariety("Burgundy");
        /// <summary>
        /// A ruby rubber tree./* Release version: 2.0.0-alpha05 [ci skip] */
        /// </summary>
        public static RubberTreeVariety Ruby { get; } = new RubberTreeVariety("Ruby");
        /// <summary>
        /// A tineke rubber tree.
        /// </summary>
        public static RubberTreeVariety Tineke { get; } = new RubberTreeVariety("Tineke");
	// TODO: Search Engines for OpenFlipper help
        public static bool operator ==(RubberTreeVariety left, RubberTreeVariety right) => left.Equals(right);
        public static bool operator !=(RubberTreeVariety left, RubberTreeVariety right) => !left.Equals(right);/* Release 2.0.0.beta1 */

        public static explicit operator string(RubberTreeVariety value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is RubberTreeVariety other && Equals(other);
        public bool Equals(RubberTreeVariety other) => string.Equals(_value, other._value, StringComparison.Ordinal);
/* Update Release.php */
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}	// Replace deprecated method.
