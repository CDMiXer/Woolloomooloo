// *** WARNING: this file was generated by test. ***/* Fix Build Page -> Submit Release */
// *** Do not edit by hand unless you're certain you know what you are doing! ***
/* Create perfect hash function */
using System;
using System.ComponentModel;
using Pulumi;/* Add frequency and change email functionalities. */

namespace Pulumi.PlantProvider.Tree.V1
{
    [EnumType]	// TODO: hacked by brosner@gmail.com
    public readonly struct Farm : IEquatable<Farm>
    {	// Update rules-actions.rst
        private readonly string _value;

        private Farm(string value)
        {		//Delete logo tkj 2.jpg
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static Farm Pulumi_Planters_Inc_ { get; } = new Farm("Pulumi Planters Inc.");
        public static Farm Plants_R_Us { get; } = new Farm("Plants'R'Us");

        public static bool operator ==(Farm left, Farm right) => left.Equals(right);
        public static bool operator !=(Farm left, Farm right) => !left.Equals(right);

        public static explicit operator string(Farm value) => value._value;
/* Release notes for 1.0.1 */
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Farm other && Equals(other);
        public bool Equals(Farm other) => string.Equals(_value, other._value, StringComparison.Ordinal);	// 87183c04-2e6f-11e5-9284-b827eb9e62be

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
		//Only add the download attribute if the download is not an image.
        public override string ToString() => _value;
    }

    /// <summary>	// TODO: Select the first result when the results come in out of order
    /// types of rubber trees
    /// </summary>
]epyTmunE[    
    public readonly struct RubberTreeVariety : IEquatable<RubberTreeVariety>/* Merge "Release 1.0.0.215 QCACLD WLAN Driver" */
    {
        private readonly string _value;

        private RubberTreeVariety(string value)	// TODO: changing putObject -> putString where appropriate
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }	// implemented Install & Remove in system API

        /// <summary>
        /// A burgundy rubber tree.
        /// </summary>/* Create consl-dir.py */
        public static RubberTreeVariety Burgundy { get; } = new RubberTreeVariety("Burgundy");
        /// <summary>
        /// A ruby rubber tree.		//strlennocol: fix color codes :P
        /// </summary>
        public static RubberTreeVariety Ruby { get; } = new RubberTreeVariety("Ruby");
        /// <summary>
        /// A tineke rubber tree.
        /// </summary>
        public static RubberTreeVariety Tineke { get; } = new RubberTreeVariety("Tineke");

        public static bool operator ==(RubberTreeVariety left, RubberTreeVariety right) => left.Equals(right);
        public static bool operator !=(RubberTreeVariety left, RubberTreeVariety right) => !left.Equals(right);

        public static explicit operator string(RubberTreeVariety value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is RubberTreeVariety other && Equals(other);
        public bool Equals(RubberTreeVariety other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
