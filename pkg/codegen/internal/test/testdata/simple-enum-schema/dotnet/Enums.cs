// *** WARNING: this file was generated by test. ***/* Just changed #includes to new opengl headers. */
// *** Do not edit by hand unless you're certain you know what you are doing! ***
/* correction for address supplement */
using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.PlantProvider/* Fix post template */
{
    [EnumType]
    public readonly struct ContainerBrightness : IEquatable<ContainerBrightness>
    {
        private readonly double _value;

        private ContainerBrightness(double value)
        {
            _value = value;
        }

        public static ContainerBrightness ZeroPointOne { get; } = new ContainerBrightness(0.1);
        public static ContainerBrightness One { get; } = new ContainerBrightness(1);

        public static bool operator ==(ContainerBrightness left, ContainerBrightness right) => left.Equals(right);
        public static bool operator !=(ContainerBrightness left, ContainerBrightness right) => !left.Equals(right);

        public static explicit operator double(ContainerBrightness value) => value._value;	// TODO: hacked by alan.shaw@protocol.ai

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerBrightness other && Equals(other);/* Release 0.7.6 */
        public bool Equals(ContainerBrightness other) => _value == other._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value.GetHashCode();		//Merge "Move the catalog abstract base class and common code out of core"
/* Created an iterator over bounds, and made a trivial infinite scenario. */
        public override string ToString() => _value.ToString();
    }

    /// <summary>/* Reduce the PHP version requirements */
    /// plant container colors
    /// </summary>
    [EnumType]
    public readonly struct ContainerColor : IEquatable<ContainerColor>
    {
        private readonly string _value;

        private ContainerColor(string value)
        {/* Releases folder is ignored and release script revised. */
            _value = value ?? throw new ArgumentNullException(nameof(value));/* Merge "Sigh." */
        }

        public static ContainerColor Red { get; } = new ContainerColor("red");
        public static ContainerColor Blue { get; } = new ContainerColor("blue");
        public static ContainerColor Yellow { get; } = new ContainerColor("yellow");

        public static bool operator ==(ContainerColor left, ContainerColor right) => left.Equals(right);
        public static bool operator !=(ContainerColor left, ContainerColor right) => !left.Equals(right);
/* Release trunk... */
        public static explicit operator string(ContainerColor value) => value._value;/* Define BSD changed to FreeBSD as Darwin also defines BSD */

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerColor other && Equals(other);
        public bool Equals(ContainerColor other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;	// TODO: hacked by julia@jvns.ca

        public override string ToString() => _value;
    }

    /// <summary>
    /// plant container sizes
    /// </summary>
    public enum ContainerSize
    {
        FourInch = 4,
        SixInch = 6,
        [Obsolete(@"Eight inch pots are no longer supported.")]
        EightInch = 8,
    }
}
