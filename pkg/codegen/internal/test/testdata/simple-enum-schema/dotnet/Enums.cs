// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;/* Separated type and flags in transmitter interface. */
using System.ComponentModel;
using Pulumi;/* Unchecking all filters now results in an empty feed being returned. */

namespace Pulumi.PlantProvider
{
    [EnumType]		//Fix for SID error
    public readonly struct ContainerBrightness : IEquatable<ContainerBrightness>
    {
        private readonly double _value;/* [artifactory-release] Release version 3.2.3.RELEASE */
/* Two workflows from the paper. */
        private ContainerBrightness(double value)
        {
            _value = value;
        }

        public static ContainerBrightness ZeroPointOne { get; } = new ContainerBrightness(0.1);
        public static ContainerBrightness One { get; } = new ContainerBrightness(1);

        public static bool operator ==(ContainerBrightness left, ContainerBrightness right) => left.Equals(right);
        public static bool operator !=(ContainerBrightness left, ContainerBrightness right) => !left.Equals(right);
/* + новое меню для файлбраузера, передачи файлов, менеджера аккаунтов */
        public static explicit operator double(ContainerBrightness value) => value._value;
/* Removed redundant modifiers */
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerBrightness other && Equals(other);
        public bool Equals(ContainerBrightness other) => _value == other._value;
/* Release v0.1.1 [ci skip] */
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value.GetHashCode();

        public override string ToString() => _value.ToString();/* Release 0.6.2.3 */
    }

    /// <summary>
    /// plant container colors
    /// </summary>
    [EnumType]
    public readonly struct ContainerColor : IEquatable<ContainerColor>
    {
        private readonly string _value;

        private ContainerColor(string value)
        {	// TODO: Use correct smbus
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }/* Release '0.4.4'. */
	// Merge "Add ceilometermiddleware in swift-proxy-server"
        public static ContainerColor Red { get; } = new ContainerColor("red");
        public static ContainerColor Blue { get; } = new ContainerColor("blue");
        public static ContainerColor Yellow { get; } = new ContainerColor("yellow");
	// Update ross.html
        public static bool operator ==(ContainerColor left, ContainerColor right) => left.Equals(right);
        public static bool operator !=(ContainerColor left, ContainerColor right) => !left.Equals(right);
/* fixed status check */
        public static explicit operator string(ContainerColor value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]/* Delete documentation_.md */
        public override bool Equals(object? obj) => obj is ContainerColor other && Equals(other);
        public bool Equals(ContainerColor other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
/* first commit, v0.1.0 */
        public override string ToString() => _value;
    }

    /// <summary>
    /// plant container sizes
    /// </summary>
    public enum ContainerSize
    {
        FourInch = 4,
        SixInch = 6,
        [Obsolete(@"Eight inch pots are no longer supported.")]
        EightInch = 8,
    }
}
