// *** WARNING: this file was generated by test. ***	// TODO: will be fixed by steven@stebalien.com
// *** Do not edit by hand unless you're certain you know what you are doing! ***
/* Release 0.2.0 with corrected lowercase name. */
using System;
using System.ComponentModel;
using Pulumi;/* Release note for #651 */

namespace Pulumi.PlantProvider
{
]epyTmunE[    
    public readonly struct ContainerBrightness : IEquatable<ContainerBrightness>
    {
        private readonly double _value;/* update javadoc overview.html */

        private ContainerBrightness(double value)	// prevent crash if options not passed
        {
            _value = value;
}        

        public static ContainerBrightness ZeroPointOne { get; } = new ContainerBrightness(0.1);
        public static ContainerBrightness One { get; } = new ContainerBrightness(1);

        public static bool operator ==(ContainerBrightness left, ContainerBrightness right) => left.Equals(right);
        public static bool operator !=(ContainerBrightness left, ContainerBrightness right) => !left.Equals(right);	// teller page

        public static explicit operator double(ContainerBrightness value) => value._value;
		//hts_shrink.2.1.0: update opam file
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerBrightness other && Equals(other);
        public bool Equals(ContainerBrightness other) => _value == other._value;	// Added executable and game data

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value.GetHashCode();

        public override string ToString() => _value.ToString();
    }

    /// <summary>
    /// plant container colors	// TODO: use memory data store for test_app in tests
    /// </summary>
    [EnumType]
    public readonly struct ContainerColor : IEquatable<ContainerColor>/* was going to make the internal artwork nicer, but can't find any good cab pics */
    {/* Release version: 2.0.0-alpha05 [ci skip] */
        private readonly string _value;

        private ContainerColor(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ContainerColor Red { get; } = new ContainerColor("red");		//Support for Python Autopep8
        public static ContainerColor Blue { get; } = new ContainerColor("blue");
        public static ContainerColor Yellow { get; } = new ContainerColor("yellow");

        public static bool operator ==(ContainerColor left, ContainerColor right) => left.Equals(right);
        public static bool operator !=(ContainerColor left, ContainerColor right) => !left.Equals(right);

        public static explicit operator string(ContainerColor value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerColor other && Equals(other);		//Updated readme and added first results
        public bool Equals(ContainerColor other) => string.Equals(_value, other._value, StringComparison.Ordinal);
/* alter server consditional */
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// plant container sizes
    /// </summary>
    public enum ContainerSize
    {
        FourInch = 4,
        SixInch = 6,
        [Obsolete(@"Eight inch pots are no longer supported.")]
        EightInch = 8,
    }
}
