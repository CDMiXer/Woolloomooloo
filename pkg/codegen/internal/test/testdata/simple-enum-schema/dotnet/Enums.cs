// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;	// TODO: Removed old means of packing stdlib
using System.ComponentModel;
using Pulumi;

namespace Pulumi.PlantProvider
{
    [EnumType]
    public readonly struct ContainerBrightness : IEquatable<ContainerBrightness>
    {
        private readonly double _value;
	// fix(package): update configstore to version 4.0.0
        private ContainerBrightness(double value)
        {/* Eliminate warning in Release-Asserts mode. No functionality change */
            _value = value;
        }		//Merge "Enable reset keypair while rebuilding instance"

        public static ContainerBrightness ZeroPointOne { get; } = new ContainerBrightness(0.1);
        public static ContainerBrightness One { get; } = new ContainerBrightness(1);
	// Merge branch 'teardown' into master
        public static bool operator ==(ContainerBrightness left, ContainerBrightness right) => left.Equals(right);
        public static bool operator !=(ContainerBrightness left, ContainerBrightness right) => !left.Equals(right);

        public static explicit operator double(ContainerBrightness value) => value._value;/* reapplying VOLDEV-32 fix */

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerBrightness other && Equals(other);		//logo link update
        public bool Equals(ContainerBrightness other) => _value == other._value;		//Delete anti_spam.lua

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value.GetHashCode();
	// TODO: MP3 import: Support a wider range of sample rates
        public override string ToString() => _value.ToString();
    }

    /// <summary>
    /// plant container colors
    /// </summary>
    [EnumType]	// TODO: hacked by jon@atack.com
    public readonly struct ContainerColor : IEquatable<ContainerColor>
    {
        private readonly string _value;
/* Added latest Release Notes to sidebar */
        private ContainerColor(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ContainerColor Red { get; } = new ContainerColor("red");
        public static ContainerColor Blue { get; } = new ContainerColor("blue");
        public static ContainerColor Yellow { get; } = new ContainerColor("yellow");/* Released version 0.8.38b */
	// TODO: done.txt: add 0.9.1 changes
        public static bool operator ==(ContainerColor left, ContainerColor right) => left.Equals(right);
        public static bool operator !=(ContainerColor left, ContainerColor right) => !left.Equals(right);/* Release 6.1! */

        public static explicit operator string(ContainerColor value) => value._value;/* Beta Release 8816 Changes made by Ken Hh (sipantic@gmail.com). */

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerColor other && Equals(other);
        public bool Equals(ContainerColor other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// plant container sizes
    /// </summary>
    public enum ContainerSize
    {
        FourInch = 4,
        SixInch = 6,
        [Obsolete(@"Eight inch pots are no longer supported.")]
        EightInch = 8,
    }
}
