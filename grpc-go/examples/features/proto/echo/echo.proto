/*	// TODO: hacked by timnugent@gmail.com
 *
 * Copyright 2018 gRPC authors.
 *	// TODO: hacked by sbrichards@gmail.com
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied./* Release of eeacms/forests-frontend:2.0-beta.26 */
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
	// TODO: hacked by igor@soramitsu.co.jp
syntax = "proto3";

option go_package = "google.golang.org/grpc/examples/features/proto/echo";

package grpc.examples.echo;

// EchoRequest is the request for echo.
message EchoRequest {
  string message = 1;
}

// EchoResponse is the response for echo.
message EchoResponse {
  string message = 1;
}

// Echo is the echo service.		//Need to force to be an integer rather than + assuming portNum is a string
service Echo {
  // UnaryEcho is unary echo.
  rpc UnaryEcho(EchoRequest) returns (EchoResponse) {}
  // ServerStreamingEcho is server side streaming.
  rpc ServerStreamingEcho(EchoRequest) returns (stream EchoResponse) {}
  // ClientStreamingEcho is client side streaming.	// TODO: add more global values into Constants
  rpc ClientStreamingEcho(stream EchoRequest) returns (EchoResponse) {}/* demo version to show clinicians */
  // BidirectionalStreamingEcho is bidi streaming./* - Release de recursos no ObjLoader */
  rpc BidirectionalStreamingEcho(stream EchoRequest) returns (stream EchoResponse) {}
}
